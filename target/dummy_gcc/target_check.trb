# -*- coding: utf-8 -*-
#
#		パス3の生成スクリプトのターゲット依存部（ダミーターゲット用）
#
#   $Id: target_check.trb 1320 2019-11-27 14:11:49Z ertl-hiro $
# 

#
#  ターゲット非依存部のインクルード
#
IncludeTrb("kernel/kernel_check.trb")

#
#  割込みハンドラテーブルに関するチェック
#
inhinib_table = SYMBOL("_kernel_inhinib_table", true)
if inhinib_table
  inhinib = PEEK(inhinib_table, $sizeof_ptr_u8)
  tnum_def_inhno = PEEK(inhinib_table + $sizeof_ptr_u8, $sizeof_usize)

  1.upto(tnum_def_inhno).each do
    inhno = PEEK(inhinib + $offsetof_INHINIB_inhno, $sizeof_INHNO)
    inthdr = PEEK(inhinib + $offsetof_INHINIB_inthdr, $sizeof_INTHDR)

    # 割込みハンドラの先頭番地のチェック［NGKI3056］
    if (inthdr & ($CHECK_FUNC_ALIGN - 1)) != 0
      error("E_PAR: `inthdr' of interrupt handler #{inhno} is not aligned.")
    end
    if $CHECK_FUNC_NONNULL != 0 && inthdr == 0
      error("E_PAR: `inthdr' of interrupt handler #{inhno} is null.")
    end

    inhinib += $sizeof_INHINIB
  end
end

#
#  CPU例外ハンドラテーブルに関するチェック
#
excinib_table = SYMBOL("_kernel_excinib_table", true)
if excinib_table
  excinib = PEEK(excinib_table, $sizeof_ptr_u8)
  tnum_def_excno = PEEK(excinib_table + $sizeof_ptr_u8, $sizeof_usize)

  1.upto(tnum_def_excno).each do
    excno = PEEK(excinib + $offsetof_EXCINIB_excno, $sizeof_EXCNO)
    exchdr = PEEK(excinib + $offsetof_EXCINIB_exchdr, $sizeof_EXCHDR)

    # CPU例外ハンドラの先頭番地のチェック［NGKI3135］
    if (exchdr & ($CHECK_FUNC_ALIGN - 1)) != 0
      error("E_PAR: `exchdr' of exception handler #{excno} is not aligned.")
    end
    if $CHECK_FUNC_NONNULL != 0 && exchdr == 0
      error("E_PAR: `exchdr' of exception handler #{excno} is null.")
    end

    excinib += $sizeof_EXCINIB
  end
end
